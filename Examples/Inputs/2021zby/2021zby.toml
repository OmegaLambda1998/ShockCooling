[ global ]
output_path = "../../Outputs/2021zby"
logging = true

[ data ]
data_path = "2021zby_data.toml" # Can be absolute, or relative to base_path
max_time = -17 # Can specify either a value, min, or max. If min or max are specified, you canalso give a range of max_times, and it will find where the min / max flux within that range is. Can do the same with min_time
max_time_unit = "d" # Defaults to d

[[ model ]]
name = "SW17_BSG"
constraints.R.unit = "Rsun"
constraints.R.prior = "Normal"
constraints.R.values = [50, 10] 
constraints.R.min = 0 # Truncates distribution. Defaults to -Inf.

constraints.M.unit = "Msun"
constraints.M.prior = "Normal"
constraints.M.values = [20, 10] 
constraints.M.min = 0

constraints.v.unit = "km / s"
constraints.v.prior = "Normal"
constraints.v.values = [1e4, 1e4] 
constraints.v.min = 0

constraints.t.unit = "d"
constraints.t.prior = "Normal"
constraints.t.values = [-24, 0.1]
constraints.t.min = -24.5
constraints.t.max = -23.5

[[ model ]]
name = "SW17_RSG"
constraints.R.unit = "Rsun"
constraints.R.prior = "Normal"
constraints.R.values = [20, 10] 
constraints.R.min = 0 # Truncates distribution. Defaults to -Inf.

constraints.M.unit = "Msun"
constraints.M.prior = "Normal"
constraints.M.values = [20, 10] 
constraints.M.min = 0

constraints.v.unit = "km / s"
constraints.v.prior = "Normal"
constraints.v.values = [1e4, 1e4] 
constraints.v.min = 0

constraints.t.unit = "d"
constraints.t.prior = "Normal"
constraints.t.values = [-24, 0.1]
constraints.t.min = -24.5
constraints.t.max = -23.5

[[ model ]]
name = "P15"
constraints.R.unit = "Rsun"
constraints.R.prior = "Normal"
constraints.R.values = [20, 10] 
constraints.R.min = 0 # Truncates distribution. Defaults to -Inf.

constraints.M.unit = "Msun"
constraints.M.prior = "Normal"
constraints.M.values = [1, 0.5] 
constraints.M.min = 0

constraints.v.unit = "km / s"
constraints.v.prior = "Normal"
constraints.v.values = [1e4, 1e4] 
constraints.v.min = 0

constraints.t.unit = "d"
constraints.t.prior = "Normal"
constraints.t.values = [-24, 0.1]
constraints.t.min = -24.5
constraints.t.max = -23.5

[[ model ]]
name = "P20"
constraints.R.unit = "Rsun"
constraints.R.prior = "Normal"
constraints.R.values = [20, 10] 
constraints.R.min = 0 # Truncates distribution. Defaults to -Inf.

constraints.M.unit = "Msun"
constraints.M.prior = "Normal"
constraints.M.values = [100, 50] 
constraints.M.min = 0

constraints.v.unit = "km / s"
constraints.v.prior = "Normal"
constraints.v.values = [1e4, 1e4] 
constraints.v.min = 0

constraints.t.unit = "d"
constraints.t.prior = "Normal"
constraints.t.values = [-24, 0.1]
constraints.t.min = -24.5
constraints.t.max = -23.5


[ fitting ]
numwalkers = 10000
burnin = 500000
iterations = 1000000

[ plot.comparison ] # compare the best fit to the data

[ plot.contour ]
